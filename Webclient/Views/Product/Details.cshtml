@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    List<Product> related = (List<Product>)ViewData["relatedProducts"];
}
@model Product

<style>
    body {
        font-family: 'Helvetica Neue', Arial, sans-serif;
        background-color: #f8f9fa;
        color: #333;
    }

    .navbar-brand {
        font-weight: bold;
    }

        .navbar-brand span {
            color: #dc3545;
        }

    .product-image {
        max-height: 400px;
        object-fit: cover;
    }

    .price {
        font-size: 1.5rem;
        color: #dc3545;
    }

    .btn-add-to-cart {
        background-color: #28a745;
        border-color: #28a745;
    }

        .btn-add-to-cart:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .related-product-img {
        height: 150px;
        object-fit: cover;
    }

    .review-card {
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
    }

    .star-rating {
        color: #ffc107;
    }

        .star-rating .bi-star-fill, .bi-star-half, .bi-star {
            font-size: 0.8rem;
        }
</style>

<div class="row">
    <div class="col-md-6">
        <img src="/img/@Model.Image" alt="@Model.Name" class="img-fluid rounded product-image">
    </div>
    <div class="col-md-6">
        <h1 class="mb-4">@Model.Name</h1>
        <p class="price mb-3">Giá: @Model.Price.ToString("0")₫</p>
        <p class="mb-4">Tình trạng: @(Model.StockQuantity > 0 ? "Còn hàng" : "Hết hàng")</p>
        @* <div class="mb-4">
        <h5>Features:</h5>
        <ul>
        <li>Made from high-quality ceramic</li>
        <li>Microwave and dishwasher safe</li>
        <li>Perfect size for individual servings</li>
        <li>Available in multiple colors</li>
        </ul>
        </div> *@
        <div class="mb-4">
            <label for="quantity" class="form-label">Số lượng:</label>
            <input id="quantity" class="form-control w-25" type="number" min="1" max="@Model.StockQuantity" />
        </div>
        <button onclick="addItemToCart()" class="btn btn-add-to-cart btn-lg">Thêm vào Giỏ</button>
    </div>
</div>

<section class="mt-5">
    <h2 class="mb-4">Chi tiết sản phẩm</h2>
    <div class="row">
        <div class="col-md-6">
            @if (Model.Size != null)
            {
                <h5>Kích thước</h5>
                <p>@Model.Size</p>
            }
            @if (Model.Material != null)
            {
                <h5>Chất liệu</h5>
                <p>@Model.Material</p>
            }
        </div>
        <div class="col-md-6">
            @if (Model.Age != null)
            {
                <h5>Độ mới</h5>
                <p>@Model.Age</p>
            }
            @if (Model.Origin != null)
            {
                <h5>Xuất sứ</h5>
                <p>@Model.Origin</p>
            }
            </div>
        </div>
    </section>

    <section class="mt-5">
        <h2 class="mb-4">Đánh giá từ khách hàng</h2>
        <div id="reviewPart" class="row">
        </div>
        <div class="row">
            <button id="seeMores" class="btn btn-light w-100 border-dark">Xem thêm</button>
        </div>
    </section>

    <section class="mt-5">
        <h2 class="mb-4">Các sản phẩm liên quan</h2>
        <div class="row">
            @foreach (Product product in related)
        {
            <div class="col-6 col-md-3 mb-4">
                <div class="card">
                    <img src="/img/@product.Image" class="card-img-top related-product-img" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Price.ToString("0")₫</p>
                        <a href="/Product/Details?id=@product.ProductId" class="btn btn-outline-primary btn-sm">Xem chi tiết</a>
                    </div>
                </div>
            </div>
        }
    </div>
</section>
<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>

<script>
    function addItemToCart() {
        if ($("#quantity").val() == "") {
            toastr.error(`Số lượng tối thiểu là 1`, 'Lỗi');
            return;
        }
        if ($("#quantity").val() > @Model.StockQuantity) {
            toastr.error(`Số lượng đặt không thể vượt quá tồn kho`, 'Lỗi');
            return;
        }

        let item = {
            ProductId: @Model.ProductId,
            Quantity: $("#quantity").val()
        };

        $.ajax({
            url: '/Account/AddToCart',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(item),
            success: function (response) {
                toastr.success('Đã thêm mặt hàng vào giỏ!', 'Thành công');
            },
            error: function (xhr, status, error) {
                toastr.error(`Không thể thêm mặt hàng do ${xhr.responseText}`, 'Lỗi');
            }
        });
    }

    // $(document).ready(function () {
    let pId = @Model.ProductId;
    let currentPage = 0;
    loadMoreReviews();
    function checkRemainingReviews() {
        $.ajax({
            url: '/Product/GetRemainReview',
            type: 'GET',
            data: { pId: pId, page: currentPage },
            success: function (amount) {

                if (parseInt(amount) > 0) {
                    $('#seeMores').show();
                } else {
                    $('#seeMores').hide();
                }

            },
            error: function () {
                toastr.error('Không thể kiểm đếm được số lượng đánh giá.');
            }
        });
    }

    function loadMoreReviews() {
        $.ajax({
            url: '/Product/GetReview',
            type: 'GET',
            data: { pId: pId, page: currentPage + 1 },
            success: function (reviews) {
                reviews.forEach(function (review) {

                    const reviewDate = new Date(review.createdAt);
                    const reviewDateInVN = formatDateTime(reviewDate);
                    const stars = generateStars(review.rating);
                    const reviewHtml = `
                                        <div class="review-card">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <h5 class="mb-0">${review.user.fullName || 'Ẩn danh'}</h5>
                                                <small class="text-muted">${reviewDateInVN}</small>
                                            </div>
                                            <div class="star-rating mb-2">
                                                ${stars}
                                            </div>
                                            <p>${review.comment || 'Không bình luận.'}</p>
                                        </div>
                                    `;
                    $('#reviewPart').append(reviewHtml);
                });
                currentPage++;
                checkRemainingReviews();

            },
            error: function () {
                toastr.error('Đã xảy ra vấn đề khi load đánh giá.', 'Lỗi');
            }
        });
    }

    function formatDateTime(date) {
        const hours = date.getHours();
        const minutes = date.getMinutes();
        const ampm = hours >= 12 ? 'chiều' : 'sáng';

        const formattedHours = hours % 12 || 12;
        const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;

        const day = date.getDate();
        const month = date.getMonth() + 1;
        const year = date.getFullYear();

        const formattedDay = day < 10 ? '0' + day : day;
        const formattedMonth = month < 10 ? '0' + month : month;

        return `${formattedHours}:${formattedMinutes} ${ampm} ${formattedDay}/${formattedMonth}/${year}`;
    }


    function generateStars(rating) {
        let starsHtml = '';
        for (let i = 1; i <= 5; i++) {
            if (i <= rating) {
                starsHtml += '<i class="bi bi-star-fill"></i>';
            } else if (i === Math.ceil(rating) && !Number.isInteger(rating)) {
                starsHtml += '<i class="bi bi-star-half"></i>';
            } else {
                starsHtml += '<i class="bi bi-star"></i>';
            }
        }
        return starsHtml;
    }

    $('#seeMores').on('click', function () {
        loadMoreReviews();
    });
    // });


</script>