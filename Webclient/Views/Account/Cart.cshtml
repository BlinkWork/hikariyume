@{
    ViewData["Title"] = "Giỏ hàng";
    decimal totalMoney = 0;
    string address = (string)ViewData["Address"];
}
@model IEnumerable<Cart>
<style>
    body {
        font-family: 'Helvetica Neue', Arial, sans-serif;
        background-color: #f8f9fa;
    }

    .navbar-brand {
        font-weight: bold;
    }

        .navbar-brand span {
            color: #dc3545;
        }

    .cart-container {
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        padding: 30px;
        margin-top: 30px;
        margin-bottom: 30px;
    }

    .cart-item {
        border-bottom: 1px solid #e9ecef;
        padding-bottom: 20px;
        margin-bottom: 20px;
    }

        .cart-item:last-child {
            border-bottom: none;
            padding-bottom: 0;
            margin-bottom: 0;
        }

    .product-image {
        max-width: 100px;
        height: auto;
    }

    .quantity-input {
        width: 60px;
    }

    .summary-card {
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
    }

    .btn-primary {
        background-color: #dc3545;
        border-color: #dc3545;
    }

        .btn-primary:hover, .btn-primary:focus {
            background-color: #c82333;
            border-color: #bd2130;
        }
</style>
<div class="row">
    <div class="col-lg-8">
        <div id="cartContainer" class="cart-container">
        </div>
    </div>
    <div class="col-lg-4">
        <div class="cart-container summary-card">
            <h3>Địa chỉ nhận hàng</h3>
            <div>
                <span>
                    @address
                </span>
            </div>
            </div>
        <div class="cart-container summary-card">
            <h3 class="mb-4">Tổng giá</h3>
            <div class="d-flex justify-content-between mb-2">
                <span>Chi phí</span>
                <span id="fee">@totalMoney.ToString("0")</span>
            </div>
            <div class="d-flex justify-content-between mb-2">
                <span>Phí ship</span>
                <span>0₫</span>
            </div>
            <div class="d-flex justify-content-between mb-4">
                <strong>Tổng</strong>
                <strong id="totalFee">@((totalMoney).ToString("0"))₫</strong>
            </div>
            <div class="d-flex justify-content-between mb-4">
                <span>Phương thức thanh toán</span>
                <div class="d-flex align-content-center">
                    <input class="form-check" id="cod" type="radio" checked />
                    <label for="cod">Thanh toán bằng COD</label><br>
                </div>
            </div>
          
            <btn onclick="proceedCheckout()" class="btn btn-primary w-100">Đặt hàng</btn>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>

<script>
    let cartItems = @Html.Raw(Json.Serialize(Model));
    updateCartUI(cartItems);

    function removeItemFromCart(itemId) {
        $.ajax({
            url: '/account/RemoveItemFromCart',
            type: 'GET',
            data: { id: itemId },
            success: function (response) {
                if (cartItems.$values) {
                    cartItems = cartItems.$values;
                }

                cartItems = cartItems.filter(item => item.cartId !== itemId);

                toastr.success('Đã xóa mặt hàng thành công!', 'Thành công');

                updateCartUI(cartItems);
            },
            error: function (xhr, status, error) {
                toastr.error(`${xhr.responseText}.`, 'Lỗi');
            }
        });
    }

    function updateCartUI(cartItems) {
        $('#cartContainer').empty();


        let total = 0;
        if (cartItems.$values) {
            cartItems = cartItems.$values;
        }

        $('#cartContainer').append(`<h2 class="mb-4">Giỏ hàng của bạn</h2>`);

        cartItems.forEach(item => {
            total += item.product.price * item.quantity;

            $('#cartContainer').append(`
                    <div class="cart-item" data-cart-id="${item.cartId}">
                        <div class="row align-items-center">
                            <div class="col-md-2">
                                <img src="/img/${item.product.image}" alt="${item.product.image}" class="product-image">
                            </div>
                            <div class="col-md-4">
                                <h5>${item.product.name}</h5>
                                <p class="text-muted">${item.product.size}</p>
                                <p class="text-muted">${item.product.age}</p>
                            </div>
                            <div class="col-md-2">
                                <p>${item.product.price.toFixed(0)}₫</p>
                            </div>
                            <div class="col-md-2">
                                <p>Số lượng: ${item.quantity}</p>
                            </div>
                            <div class="col-md-2 text-end">
                                <a onclick="removeItemFromCart(${item.cartId})" class="btn btn-sm btn-outline-danger">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                `);
        });
        $('#fee').text(`${total.toFixed(0)}₫`);
        $('#totalFee').text(`${total.toFixed(0)}₫`);
    }

    function proceedCheckout() {
        $.ajax({
            url: '/account/ProceedCheckout',
            type: 'POST',
            success: function (response) {
                toastr.success(`Đặt hàng thành công`, 'Thành công');
                window.location.href = '/Account/History';
            },
            error: function (xhr, status, error) {
                toastr.error(`Không thể thực hiện hành động này do ${xhr.responseText}`, 'Lỗi');
            }
        });
    }

</script>